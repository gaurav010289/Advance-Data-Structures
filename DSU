class DSU{
  vector<int> parent,size;
  DSU(int n){
      for(int i = 0;i<n;i++){
          parent.push_back(i);
          size.push_back(1);
      }
  }
  
  int findParent(int node){
      if(node == parent[node])
        return node;
      return parent[node] = findParent(parent[node]);
  }
  
  bool Union(int u,int v){
      int parU = findParent(u);
      int parV = findParent(v);
      
      if(parU == parV)return false;
      
      if(size[parU] < size[parV]){
          parent[parU] = parV;
          size[parV] += size[parU];
      }
      else{
          parent[parV] = parU;
          size[parU] += size[parV];
      }
      
      return true;
  }
};
